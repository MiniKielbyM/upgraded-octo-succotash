{"version":3,"sources":["webpack:///webpack/bootstrap 0db72969f8c93c47d3b1","webpack:///./hamsters.js","webpack:///./core/habitat.js","webpack:///../~/node-libs-browser/~/process/browser.js","webpack:///./core/wheel.js","webpack:///./core/pool.js","webpack:///./core/data.js"],"names":["hamstersjs","version","habitat","data","pool","run","hamstersRun","bind","promise","hamstersPromise","init","inititializeLibrary","startOptions","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","console","info","Object","keys","key","indexOf","toLowerCase","forceLegacyMode","Worker","isIE","params","functionToRun","task","id","tasks","length","input","scheduler","count","threads","workers","indexes","metrics","created_at","Date","now","started_at","completed_at","node","hamstersJob","prepareFunction","getSubArrayIndexes","array","resolve","reject","scheduleTask","then","results","catch","error","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","debug","importScripts","memoize","browser","isBrowser","webWorker","isWebWorker","isNode","reactNative","isReactNative","shell","isShell","transferable","supportstransferableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","hamsterWheel","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","findAvailableBlobBuilder","isLegacyEnvironment","legacyWheel","locateWorkerObject","determineGlobalThreads","getHabitatKeys","max","navigator","hardwareConcurrency","isFirefox","os","cpus","userAgent","SharedWorker","window","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","hamstersHabitat","wheel","worker","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","port","ports","start","incomingMessage","dataType","eval","postMessage","onmessage","message","typedArrayFromBuffer","returnResponse","buffer","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","buffers","hamstersWheel","running","pending","fetchHamster","getAvailableThread","index","thread","enqueued_at","push","hamster","item","dequeued_at","runTask","threadId","spawnHamster","parentPort","hamsterFood","getSubArrayFromIndex","hasOwnProperty","prepareMeal","registerTask","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","sort","sortOutput","splice","output","JSON","parse","addThreadOutputWithIndex","onThreadResponse","onmessageerror","onerror","once","processReturn","removeFromRunning","returnOutputAndRemoveTask","processQueuedItem","shift","terminate","setOnMessage","i","hamsterPool","getSubArrayUsingIndex","calculateIndexes","sortTaskOutput","prepareWorkerTask","messageWorkerThread","stringify","functionBody","functionString","substring","arr","order","Array","prototype","call","a","b","reverse","outputLength","n","size","Math","ceil","end","slice","subarray","hamstersData"],"mappings":"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L,QAFK,EAEI,SAFJ,EAGL,aAHK,EAGS,SAHT,EAIL,cAJK,EAIU,SAJV,EAKL,OALK,EAKG,MALH,EAKU,OALV,EAML,aANK,EAMS,eANT,EAOL,YAPK,EAOS,YAPT,EAQL,WARK,CAAP;AAUD;;;;;;AAGH,KAAIC,kBAAkB,IAAInI,OAAJ,EAAtB;;AAEA,KAAG,OAAO6D,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBqE,eAAjB;AACD,E;;;;;;;AC/PD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAE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","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0db72969f8c93c47d3b1","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.version = '5.4.2';\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n    this.init = this.inititializeLibrary.bind(this);\n  }\n\n  /**\n  * @function initializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  inititializeLibrary(startOptions) {\n    this.processStartOptions(startOptions);\n    if(!this.habitat.legacy && this.habitat.persistence === true) {\n      hamstersPool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    console.info(`Hamsters.js ${this.version} initialized using up to ${this.habitat.maxThreads} threads.`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (var key of Object.keys(startOptions)) {\n        if (this.habitat.keys.indexOf(key.toLowerCase()) !== -1) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    var forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if(forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if(typeof this.habitat.Worker === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = this.habitat.isIE;\n    }\n  }\n\n  /**\n  * @constructor\n  * @function hamstersTask - Constructs a new task object from provided arguments\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {object} new Hamsters.js task\n  */\n  hamstersTask(params, functionToRun) {\n    let task = {\n      id: this.pool.tasks.length,\n      input: params,\n      scheduler: {\n        count: 0,\n        threads: (params.threads ? params.threads : 1),\n        workers: [],\n        indexes: (params.indexes ? params.indexes : null),\n        metrics: {\n          created_at: Date.now(),\n          started_at: null,\n          completed_at: null,\n          threads: []\n        }\n      }\n    };\n    if(this.habitat.legacy) {\n      task.scheduler.threads = 1;\n      if(!this.habitat.node && !this.habitat.isIE) {\n        params.hamstersJob = functionToRun;\n      }\n    } else {\n      params.hamstersJob = this.data.prepareFunction(functionToRun);\n      if(!task.scheduler.indexes) {\n        task.scheduler.indexes = this.data.getSubArrayIndexes(params.array, task.scheduler.threads);\n      }\n    }\n    return task;\n  }\n\n  /**\n  * @async\n  * @function hamstersPromise - Schedules new function to be processed by library\n  * @param {object} task - Provided library execution options\n  * @param {function} resolve - Parent function promise resolve method\n  * @param {function} reject- Parent function promise reject method\n  * @return {object} Promise object on completion\n  */\n  scheduleTask(task, resolve, reject) {\n    return this.pool.scheduleTask(task).then((results) => {\n      resolve(results);\n    }).catch((error) => {\n      console.error(\"Hamsters.js error encountered: \", error);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersPromise - Calls library functionality using async promises\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {array} Results from functionToRun\n  */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(this.hamstersTask(params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @param {function} onSuccess - Function to call upon successful execution\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(this.hamstersTask(params, functionToRun), onSuccess, onError);\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport hamstersWheel from './wheel';\n\nclass habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportstransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer();\n    this.hamsterWheel = this.selectHamsterWheel();\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder = this.findAvailableBlobBuilder();\n    this.legacy = this.isLegacyEnvironment();\n    this.legacyWheel = hamstersWheel.legacy;\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n    this.keys = this.getHabitatKeys();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFireox - Detect firefox browser\n  */\n  isFirefox() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.indexOf(\"MSIE \") !== -1 || navigator.userAgent.indexOf(\"Trident/\") !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a webworker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is reactNative\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product === \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.hamsterWheel);\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function createDataBlob - Attempts to locate data blob builder, vender prefixes galore\n  */\n  findAvailableBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates blob uri for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportstransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportstransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports shared array buffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function scheduleTask - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE) {\n      return hamstersWheel.legacy;\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(hamstersWheel.regular);\n  }\n\n  getHabitatKeys() {\n    return [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxthreads', 'parentport',\n      'webworker',\n    ];\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/node-libs-browser/~/process/browser.js\n// module id = 3\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage(rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    self.onmessage = function(message) {\n      params = message.data;\n      rtn = {\n        data: [],\n        dataType: (typeof params.dataType !== 'undefined' ? params.dataType : null)\n      };\n      eval(params.hamstersJob);\n      if(rtn.dataType) {\n        rtn.data = typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n      returnResponse(rtn);\n    };\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function returnResponse(rtn, buffers) {\n      if(typeof rtn.data.buffer !== 'undefined') {\n        postMessage(rtn, [rtn.data.buffer]);\n      } else {\n        postMessage(rtn);\n      }\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(hamstersHabitat, params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (typeof params.dataType !== \"undefined\" ? params.dataType : null)\n    };\n    if(hamstersHabitat.reactNative) {\n      self.rtn = rtn;\n    }\n    if(hamstersHabitat.node || hamstersHabitat.isIE) {\n      eval(params.hamstersJob);\n    } else {\n      params.hamstersJob();\n    }\n    resolve(rtn.data);\n  }\n}\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\n\nclass pool {\n\t\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.getAvailableThread;\n  }\n\n  /**\n  * @function fetchHamster - Adds task to queue waiting for available thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(index, task, resolve, reject) {\n    if(hamstersHabitat.debug) {\n      let threads = task.scheduler.metrics.threads;\n      let thread = threads[threads.length - 1];\n      thread.enqueued_at = Date.now();\n    }\n    this.pending.push({\n      index: index,\n      count: threads.length,\n      task: task,\n      resolve: resolve,\n      reject: reject\n    });\n  }\n\n  /**\n  * @function processQueuedItem - Invokes processing of next item in queue\n  * @param {object} item - Task to process\n  */\n  processQueuedItem(hamster, item) {\n    if(hamstersHabitat.debug) {\n      let threads = item.task.scheduler.metrics.threads;\n      let thread = threads[item.count];\n      thread.dequeued_at = Date.now();\n    }\n  \treturn this.runTask(hamster, item.index, item.task, item.resolve, item.reject);\n  }\n\n  /**\n  * @function getAvailableThread- Keeps track of threads running, scoped globally and to task\n  * @param {number} threadId - Id of thread\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  */\n  getAvailableThread(threadId) {\n    if(hamstersHabitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    if(hamstersHabitat.debug) {\n      let threads = task.scheduler.metrics.threads;\n      let thread = threads[threads.length - 1];\n      thread.started_at = Date.now();\n    }\n    task.scheduler.workers.push(id); //Keep track of threads scoped to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n\n  /**\n  * @function registerTask - Adds task to execution pool based on id\n  * @param {number} id - Id of task to register\n  */\n  registerTask(id) {\n    this.tasks.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {number} maxThreds - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    for (maxThreads; maxThreads > 0; maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} WebWorker - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(hamstersHabitat.hamsterWheel, 'SharedHamsterWheel');\n    }\n    if(hamstersHabitat.node && typeof hamstersHabitat.parentPort !== 'undefined') {\n      return new hamstersHabitat.Worker(hamstersHabitat.hamsterWheel);\n    }\n    return new hamstersHabitat.Worker(hamstersHabitat.hamsterWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {object} threadArray - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} hamsterFood - Prepared message to send to a thread\n  */\n  prepareMeal(index, task) {\n    const hamsterFood = {};\n    hamsterFood.array = hamstersData.getSubArrayFromIndex(index, task);\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && ['array', 'threads'].indexOf(key) === -1) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function hamsterWheel - Runs function using thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, index, task, resolve, reject) {\n  \tlet threadId = this.running.length;\n    let hamsterFood = this.prepareMeal(index, task);\n    this.registerTask(task.id);\n    this.keepTrackOfThread(task, threadId);\n    if(hamstersHabitat.legacy) {\n      hamstersHabitat.legacyWheel(hamstersHabitat, hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(this, hamstersHabitat, index, task, hamster, resolve, reject);\n      hamstersData.feedHamster(hamstersHabitat, hamster, hamsterFood);\n    }\n    task.scheduler.count += 1;\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {object} array - Provided library functionality options for this task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(index, task, resolve, reject) {\n    if(hamstersHabitat.maxThreads <= this.running.length) {\n      return this.addWorkToPending(index, task, resolve, reject);\n    }\n    let hamster = this.fetchHamster(this.running.length);\n    return this.runTask(hamster, index, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    if (task.sort) {\n      resolve(hamstersData.sortOutput(task.input.array, task.sort));\n    } else {\n      resolve(task.input.array);\n    }\n    if(hamstersHabitat.debug) {\n      task.scheduler.metrics.completed_at = Date.now();\n      console.info(\"Hamsters.js Task Completed: \", task);\n    }\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n  }\n\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1); //Remove thread from running pool\n    task.scheduler.workers.splice(task.scheduler.workers.indexOf(threadId), 1); //Remove thread from task running pool\n  }\n\n  processReturn(habitat, index, message, task) {\n    let output = message.data;\n    if(habitat.reactNative) {\n      output = JSON.parse(message).data;\n    } else if(typeof message.data.data !== \"undefined\") {\n      output = message.data.data;\n    }\n    if(task.scheduler.threads !== 1) {\n      hamstersData.addThreadOutputWithIndex(task, index, output);\n    } else {\n      task.input.array = output;\n    }\n  }\n\n  setOnMessage(hamster, onThreadResponse, habitat, reject) {\n    if (habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    }\n    if(habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.error = reject;\n    }\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} threadId - Internal use id for this thread\n  * @param {object} task - Provided library functionality options for this task\n  * @param {worker} hamster - Thread to train\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(pool, habitat, index, task, hamster, resolve, reject) {\n    let onThreadResponse = (message) => {\n      pool.processReturn(habitat, index, message, task);\n      pool.removeFromRunning(task, task.scheduler.count);\n      if (task.scheduler.workers.length === 0 && task.scheduler.count === task.scheduler.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if(habitat.debug) {\n        task.scheduler.metrics.threads[task.scheduler.metrics.threads.length - 1].completed_at = Date.now();\n      }\n      if (pool.pending.length !== 0) {\n        return pool.processQueuedItem(hamster, pool.pending.shift());\n      }\n      if(!habitat.persistence) {\n        return hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    };\n    pool.setOnMessage(hamster, onThreadResponse, habitat, reject);\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Scaffold to execute login within\n  * @param {number} maxThreads - Maximum number of threads for this client\n  */\n  scheduleTask(task) {\n    let i = 0;\n    if(hamstersHabitat.debug) {\n      let metrics = task.scheduler.metrics;\n      metrics.started_at = Date.now();\n      return new Promise((resolve, reject) => {\n        while (i < task.scheduler.threads) {\n          metrics.threads.push({\n            created_at: Date.now(),\n            started_at: null,\n            enqueued_at: null,\n            dequeued_at: null,\n            completed_at: null\n          });\n          this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n          i += 1;\n        }\n      });\n    }\n    //Process with debug mode disabled, no need for time stamping\n  \treturn new Promise((resolve, reject) => {\n      while (i < task.scheduler.threads) {\n        this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.getSubArrayFromIndex = this.getSubArrayUsingIndex;\n    this.getSubArrayIndexes = this.calculateIndexes;\n    this.sortOutput = this.sortTaskOutput;\n    this.prepareFunction = this.prepareWorkerTask;\n    this.feedHamster = this.messageWorkerThread;\n  }\n\n  /**\n  * @function messageWorkerThread - Prepares message to send to thread\n  * @param {worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorkerThread(hamstersHabitat, hamster, hamsterFood) {\n    if(hamstersHabitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (hamstersHabitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if(typeof hamsterFood.array.buffer !== 'undefined') {\n      hamster.postMessage(hamsterFood, [hamsterFood.array.buffer]);\n    } else {\n      hamster.postMessage(hamsterFood);\n    }\n  }\n\n  /**\n  * @function prepareWorkerTask - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareWorkerTask(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function sortTaskOutput - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortTaskOutput(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n  * @function addThreadOutputWithIndex - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  addThreadOutputWithIndex(task, index, output) {\n    let i = 0;\n    let outputLength = output.length;\n    for (i; i < outputLength; i++) {\n      task.input.array[(index.start + i)] = output[i];\n    }\n  }\n\n  /**\n  * @function calculateIndexes - Splits a single array into multiple equal sized subarrays\n  * @param {array} array - Array to split\n  * @param {number} n - Number of subarrays to create\n  */\n  calculateIndexes(array, n) {\n    let indexes = [];\n    let i = 0;\n    let size = Math.ceil(array.length/n);\n    while (i < array.length) {\n      indexes.push({start: i, end: i += size});\n    }\n    return indexes;\n  }\n\n  /**\n  * @function splitArrayIntoSubArrays - Splits a single array into multiple equal sized subarrays\n  * @param {array} array - Array to split\n  * @param {number} n - Number of subarrays to create\n  */\n  getSubArrayUsingIndex(index, task) {\n    if(typeof task.input.array.slice === \"function\") {\n      return task.input.array.slice(index.start, index.end);\n    }\n    return task.input.array.subarray(index.start, index.end);\n  }\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/data.js"],"sourceRoot":""}